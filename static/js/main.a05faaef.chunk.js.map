{"version":3,"sources":["modules/players/PlayerForm.jsx","modules/players/Leaderboard.jsx","App.js","serviceWorker.js","reducers/players.js","reducers/index.js","modules/players/PlayerService.js","sagas/index.js","index.js"],"names":["emptyPlayer","firstName","lastName","score","PlayerForm","state","newPlayer","Object","objectSpread","componentDidMount","_this","setState","props","player","handleScoreChange","event","value","handleInputChange","inputName","defineProperty","target","handleAction","action","dispatch","type","Error","concat","classes","this","react_default","a","createElement","noValidate","autoComplete","TextField_default","id","label","fullWidth","onChange","margin","className","sliderContainer","Typography_default","Slider_default","container","slider","min","max","step","aria-labelledby","Button_default","variant","color","onClick","Component","withStyles","theme","padding","marginTop","marginBottom","connect","Leaderboard","open","editPlayer","formAction","handleOpen","handleClose","sortedData","toConsumableArray","players","sort","b","toLowerCase","_this2","_this$props","Paper_default","root","elevation","Modal_default","aria-describedby","onClose","style","top","left","transform","modal","players_PlayerForm","Table_default","table","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","map","row","key","component","scope","width","spacing","unit","overflowX","minWidth","position","backgroundColor","palette","background","paper","boxShadow","shadows","outline","selfProps","App","Grid_default","item","xs","players_Leaderboard","flexGrow","Boolean","window","location","hostname","match","arguments","length","undefined","data","filter","p","combineReducers","PlayerService","create","_ref","Promise","res","uuidv4","createData","fetchAll","_fetchAll","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","delete","edit","fetchPlayers","createPlayer","deletePlayer","rootSaga","call","put","t0","message","_marked","_context2","console","log","_marked2","_context3","_marked3","_context4","_marked4","_context5","takeLatest","_marked5","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a05faaef.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Slider from \"@material-ui/lab/Slider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = theme => ({\n  slider: {\n    padding: \"22px 6px\"\n  },\n  sliderContainer: {\n    marginTop: \"16px\",\n    marginBottom: \"20px\"\n  }\n});\nconst emptyPlayer = { firstName: \"\", lastName: \"\", score: 0 };\nclass PlayerForm extends Component {\n  state = { newPlayer: { ...emptyPlayer } };\n\n  componentDidMount = () => {\n    this.setState({\n      ...this.state,\n      newPlayer: this.props.player\n        ? { ...this.props.player }\n        : { ...emptyPlayer }\n    });\n  };\n\n  handleScoreChange = (event, value) => {\n    this.setState({\n      ...this.state,\n      newPlayer: { ...this.state.newPlayer, score: value }\n    });\n  };\n  handleInputChange = inputName => event => {\n    this.setState({\n      ...this.state,\n      newPlayer: { ...this.state.newPlayer, [inputName]: event.target.value }\n    });\n  };\n  handleAction = () => {\n    switch (this.props.action) {\n      case \"create\":\n        this.props.dispatch({\n          type: \"CREATE_PLAYER_REQUEST\",\n          player: this.state.newPlayer\n        });\n        break;\n      case \"edit\":\n        this.props.dispatch({\n          type: \"EDIT_PLAYER_REQUEST\",\n          player: this.state.newPlayer\n        });\n        break;\n      default:\n        throw new Error(`Invalid action ${this.props.action}`);\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <form noValidate autoComplete=\"off\">\n        <TextField\n          id=\"first-name\"\n          label=\"First Name\"\n          fullWidth\n          value={this.state.newPlayer.firstName}\n          onChange={this.handleInputChange(\"firstName\")}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"last-name\"\n          label=\"Last Name\"\n          fullWidth\n          margin=\"normal\"\n          value={this.state.newPlayer.lastName}\n          onChange={this.handleInputChange(\"lastName\")}\n        />\n        <div className={classes.sliderContainer}>\n          <Typography id=\"label\">\n            Score: {this.state.newPlayer.score}\n          </Typography>\n          <Slider\n            classes={{ container: classes.slider }}\n            value={this.state.newPlayer.score}\n            min={0}\n            max={100}\n            step={1}\n            aria-labelledby=\"label\"\n            onChange={this.handleScoreChange}\n          />\n        </div>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          fullWidth\n          onClick={this.handleAction}\n        >\n          OK\n        </Button>\n      </form>\n    );\n  }\n}\n\nexport default withStyles(styles)(connect()(PlayerForm));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Button from \"@material-ui/core/Button\";\nimport Modal from \"@material-ui/core/Modal\";\n\nimport PlayerForm from \"./PlayerForm\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3,\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 700\n  },\n  modal: {\n    position: \"absolute\",\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: \"none\"\n  },\n  slider: {\n    padding: \"22px 6px\"\n  },\n  sliderContainer: {\n    marginTop: \"16px\",\n    marginBottom: \"20px\"\n  }\n});\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\nclass Leaderboard extends Component {\n  state = { open: false, editPlayer: null, formAction: null };\n  componentDidMount = () => {\n    this.props.dispatch({ type: \"FETCH_PLAYERS_REQUEST\" });\n  };\n  handleOpen = () => {\n    this.setState({ open: true, formAction: \"create\", editPlayer: null });\n  };\n  handleClose = () => {\n    this.setState({ open: false, formAction: null });\n  };\n\n  sortedData = () => {\n    return [...this.props.players].sort((a, b) => {\n      if (a.score === b.score)\n        return a.lastName.toLowerCase() > b.lastName.toLowerCase() ? 1 : -1;\n      if (a.score < b.score) return 1;\n      else return -1;\n    });\n  };\n\n  render() {\n    const { classes, dispatch } = this.props;\n    return (\n      <Paper className={classes.root} elevation={1}>\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={this.state.open}\n          onClose={this.handleClose}\n        >\n          <div style={getModalStyle()} className={classes.modal}>\n            <Typography variant=\"h6\" id=\"modal-title\">\n              New Player\n            </Typography>\n            <PlayerForm\n              player={this.state.editPlayer}\n              action={this.state.formAction}\n            />\n          </div>\n        </Modal>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell align=\"right\">Score</TableCell>\n              <TableCell align=\"right\">\n                <Button onClick={this.handleOpen}>Add</Button>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.sortedData().map(row => (\n              <TableRow key={row.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.firstName} {row.lastName}\n                </TableCell>\n                <TableCell align=\"right\">{row.score}</TableCell>\n                <TableCell align=\"right\">\n                  <Button\n                    onClick={() => {\n                      this.setState({\n                        open: true,\n                        editPlayer: row,\n                        formAction: \"edit\"\n                      });\n                    }}\n                  >\n                    Edit\n                  </Button>\n                  <Button\n                    onClick={() =>\n                      dispatch({ type: \"DELETE_PLAYER_REQUEST\", id: row.id })\n                    }\n                  >\n                    Delete\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    );\n  }\n}\n\nconst mapStateToProps = function(state, selfProps) {\n  return {\n    players: state.players\n  };\n};\n\nexport default withStyles(styles)(connect(mapStateToProps)(Leaderboard));\n","import React, { Component } from \"react\";\nimport Leaderboard from \"./modules/players/Leaderboard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  }\n});\nclass App extends Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={16}>\n          <Grid item xs={12} style={{ padding: 20 }}>\n            <Leaderboard />\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const players = (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_PLAYERS_SUCCESS\":\n      return [...state, ...action.data];\n    case \"CREATE_PLAYER_SUCCESS\":\n      return [\n        ...state,\n        {\n          ...action.player\n        }\n      ];\n    case \"EDIT_PLAYER_REQUEST\":\n      return [\n        ...state.filter(p => p.id !== action.player.id),\n        {\n          ...action.player\n        }\n      ];\n    case \"DELETE_PLAYER_SUCCESS\":\n      return [...state.filter(p => p.id !== action.id)];\n    default:\n      return state;\n  }\n};\n\nexport default players;\n","import { combineReducers } from \"redux\";\nimport players from \"./players\";\n\nexport default combineReducers({\n  players\n});\n","import uuidv4 from \"uuidv4\";\nfunction createData(firstName, lastName, score) {\n  return { id: uuidv4(), firstName, lastName, score };\n}\nexport default {\n  create({ firstName, lastName, score }) {\n    return new Promise(res => res(createData(firstName, lastName, score)));\n  },\n  async fetchAll() {\n    return await (await fetch(\"players.json\")).json();\n  },\n  delete(id) {\n    return new Promise(res => res(id));\n  },\n  edit(player) {\n    return new Promise(res => res(player));\n  }\n};\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport PlayerService from \"../modules/players/PlayerService\";\n\nfunction* fetchPlayers(action) {\n  try {\n    const data = yield call(PlayerService.fetchAll);\n    yield put({ type: \"FETCH_PLAYERS_SUCCESS\", data });\n  } catch (e) {\n    yield put({ type: \"FETCH_PLAYERS_FAIL\", message: e.message });\n  }\n}\n\nfunction* createPlayer(action) {\n  try {\n    const player = yield call(PlayerService.create, action.player);\n    yield put({ type: \"CREATE_PLAYER_SUCCESS\", player });\n  } catch (e) {\n    console.log(e);\n    yield put({ type: \"CREATE_PLAYER_FAIL\", message: e.message });\n  }\n}\n\nfunction* deletePlayer(action) {\n  try {\n    const id = yield call(PlayerService.delete, action.id);\n    yield put({ type: \"DELETE_PLAYER_SUCCESS\", id });\n  } catch (e) {\n    yield put({ type: \"DELETE_PLAYER_FAIL\", message: e.message });\n  }\n}\n\nfunction* editPlayer(action) {\n  try {\n    const player = yield call(PlayerService.edit, action.player);\n    yield put({ type: \"EDIT_PLAYER_SUCCESS\", player });\n  } catch (e) {\n    yield put({ type: \"EDIT_PLAYER_FAIL\", message: e.message });\n  }\n}\n\nfunction* rootSaga() {\n  yield takeLatest(\"FETCH_PLAYERS_REQUEST\", fetchPlayers);\n  yield takeLatest(\"CREATE_PLAYER_REQUEST\", createPlayer);\n  yield takeLatest(\"DELETE_PLAYER_REQUEST\", deletePlayer);\n  yield takeLatest(\"EDIT_PLAYER_REQUEST\", editPlayer);\n}\n\nexport default rootSaga;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport rootSaga from \"./sagas\";\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}