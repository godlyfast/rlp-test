{"version":3,"sources":["modules/players/PlayerForm.jsx","modules/players/Leaderboard.jsx","App.js","serviceWorker.js","reducers/players.js","reducers/index.js","modules/players/PlayerService.js","sagas/index.js","index.js"],"names":["emptyPlayer","firstName","lastName","score","PlayerForm","state","newPlayer","Object","objectSpread","componentDidMount","_this","setState","props","player","isValid","handleScoreChange","event","value","handleInputChange","inputName","defineProperty","target","handleAction","action","dispatch","type","Error","concat","classes","this","react_default","a","createElement","noValidate","autoComplete","TextField_default","id","label","fullWidth","required","onChange","margin","className","sliderContainer","Typography_default","Slider_default","container","slider","min","max","step","aria-labelledby","Button_default","variant","color","disabled","onClick","Component","withStyles","theme","padding","marginTop","marginBottom","connect","Leaderboard","open","editPlayer","formAction","handleOpen","handleClose","sortedData","toConsumableArray","players","sort","b","toLowerCase","getTitle","_this2","_this$props","Paper_default","root","elevation","Modal_default","aria-describedby","onClose","style","top","left","transform","modal","players_PlayerForm","Table_default","table","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","map","row","key","component","scope","width","spacing","unit","overflowX","minWidth","position","backgroundColor","palette","background","paper","boxShadow","shadows","outline","selfProps","App","Grid_default","item","xs","players_Leaderboard","flexGrow","Boolean","window","location","hostname","match","arguments","length","undefined","data","filter","p","combineReducers","PlayerService","create","_ref","Promise","res","uuidv4","createData","fetchAll","_fetchAll","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","delete","edit","fetchPlayers","createPlayer","deletePlayer","rootSaga","call","put","t0","message","_marked","_context2","console","log","_marked2","_context3","_marked3","_context4","_marked4","_context5","takeLatest","_marked5","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4318be8b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Slider from \"@material-ui/lab/Slider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = theme => ({\n  slider: {\n    padding: \"22px 6px\"\n  },\n  sliderContainer: {\n    marginTop: \"16px\",\n    marginBottom: \"20px\"\n  }\n});\nconst emptyPlayer = { firstName: \"\", lastName: \"\", score: 0 };\nclass PlayerForm extends Component {\n  state = { newPlayer: { ...emptyPlayer } };\n\n  componentDidMount = () => {\n    this.setState({\n      ...this.state,\n      newPlayer: this.props.player\n        ? { ...this.props.player }\n        : { ...emptyPlayer }\n    });\n  };\n\n  isValid = () => {\n    return !this.state.newPlayer.firstName || !this.state.newPlayer.lastName;\n  };\n\n  handleScoreChange = (event, value) => {\n    this.setState({\n      ...this.state,\n      newPlayer: { ...this.state.newPlayer, score: value }\n    });\n  };\n  handleInputChange = inputName => event => {\n    this.setState({\n      ...this.state,\n      newPlayer: { ...this.state.newPlayer, [inputName]: event.target.value }\n    });\n  };\n  handleAction = () => {\n    switch (this.props.action) {\n      case \"create\":\n        this.props.dispatch({\n          type: \"CREATE_PLAYER_REQUEST\",\n          player: this.state.newPlayer\n        });\n        break;\n      case \"edit\":\n        this.props.dispatch({\n          type: \"EDIT_PLAYER_REQUEST\",\n          player: this.state.newPlayer\n        });\n        break;\n      default:\n        throw new Error(`Invalid action ${this.props.action}`);\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <form noValidate autoComplete=\"off\">\n        <TextField\n          id=\"first-name\"\n          label=\"First Name\"\n          fullWidth\n          required={true}\n          value={this.state.newPlayer.firstName}\n          onChange={this.handleInputChange(\"firstName\")}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"last-name\"\n          label=\"Last Name\"\n          fullWidth\n          required={true}\n          margin=\"normal\"\n          value={this.state.newPlayer.lastName}\n          onChange={this.handleInputChange(\"lastName\")}\n        />\n        <div className={classes.sliderContainer}>\n          <Typography id=\"label\">\n            Score: {this.state.newPlayer.score}\n          </Typography>\n          <Slider\n            classes={{ container: classes.slider }}\n            value={this.state.newPlayer.score}\n            min={0}\n            max={100}\n            step={1}\n            aria-labelledby=\"label\"\n            onChange={this.handleScoreChange}\n          />\n        </div>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          fullWidth\n          disabled={this.isValid()}\n          onClick={this.handleAction}\n        >\n          OK\n        </Button>\n      </form>\n    );\n  }\n}\n\nexport default withStyles(styles)(connect()(PlayerForm));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Button from \"@material-ui/core/Button\";\nimport Modal from \"@material-ui/core/Modal\";\n\nimport PlayerForm from \"./PlayerForm\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3,\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 700\n  },\n  modal: {\n    position: \"absolute\",\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: \"none\"\n  },\n  slider: {\n    padding: \"22px 6px\"\n  },\n  sliderContainer: {\n    marginTop: \"16px\",\n    marginBottom: \"20px\"\n  }\n});\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\nclass Leaderboard extends Component {\n  state = { open: false, editPlayer: null, formAction: \"create\" };\n  componentDidMount = () => {\n    this.props.dispatch({ type: \"FETCH_PLAYERS_REQUEST\" });\n  };\n  handleOpen = () => {\n    this.setState({ open: true, formAction: \"create\", editPlayer: null });\n  };\n  handleClose = () => {\n    this.setState({ open: false, formAction: \"create\" });\n  };\n\n  sortedData = () => {\n    return [...this.props.players].sort((a, b) => {\n      if (a.score === b.score)\n        return a.lastName.toLowerCase() > b.lastName.toLowerCase() ? 1 : -1;\n      if (a.score < b.score) return 1;\n      else return -1;\n    });\n  };\n\n  getTitle = () => {\n    switch (this.state.formAction) {\n      case \"create\":\n        return \"Create new Player\";\n      case \"edit\":\n        return \"Edit Player\";\n      default:\n        throw new Error(`Invalid form action ${this.state.formAction}`);\n    }\n  };\n\n  render() {\n    const { classes, dispatch } = this.props;\n    return (\n      <Paper className={classes.root} elevation={1}>\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={this.state.open}\n          onClose={this.handleClose}\n        >\n          <div style={getModalStyle()} className={classes.modal}>\n            <Typography variant=\"h6\" id=\"modal-title\">\n              {this.getTitle()}\n            </Typography>\n            <PlayerForm\n              player={this.state.editPlayer}\n              action={this.state.formAction}\n            />\n          </div>\n        </Modal>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell align=\"right\">Score</TableCell>\n              <TableCell align=\"right\">\n                <Button onClick={this.handleOpen}>Add</Button>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.sortedData().map(row => (\n              <TableRow key={row.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.lastName}, {row.firstName}\n                </TableCell>\n                <TableCell align=\"right\">{row.score}</TableCell>\n                <TableCell align=\"right\">\n                  <Button\n                    onClick={() => {\n                      this.setState({\n                        open: true,\n                        editPlayer: row,\n                        formAction: \"edit\"\n                      });\n                    }}\n                  >\n                    Edit\n                  </Button>\n                  <Button\n                    onClick={() =>\n                      dispatch({ type: \"DELETE_PLAYER_REQUEST\", id: row.id })\n                    }\n                  >\n                    Delete\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    );\n  }\n}\n\nconst mapStateToProps = function(state, selfProps) {\n  return {\n    players: state.players\n  };\n};\n\nexport default withStyles(styles)(connect(mapStateToProps)(Leaderboard));\n","import React, { Component } from \"react\";\nimport Leaderboard from \"./modules/players/Leaderboard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  }\n});\nclass App extends Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={16}>\n          <Grid item xs={12} style={{ padding: 20 }}>\n            <Leaderboard />\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const players = (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_PLAYERS_SUCCESS\":\n      return [...state, ...action.data];\n    case \"CREATE_PLAYER_SUCCESS\":\n      return [\n        ...state,\n        {\n          ...action.player\n        }\n      ];\n    case \"EDIT_PLAYER_REQUEST\":\n      return [\n        ...state.filter(p => p.id !== action.player.id),\n        {\n          ...action.player\n        }\n      ];\n    case \"DELETE_PLAYER_SUCCESS\":\n      return [...state.filter(p => p.id !== action.id)];\n    default:\n      return state;\n  }\n};\n\nexport default players;\n","import { combineReducers } from \"redux\";\nimport players from \"./players\";\n\nexport default combineReducers({\n  players\n});\n","import uuidv4 from \"uuidv4\";\nfunction createData(firstName, lastName, score) {\n  return { id: uuidv4(), firstName, lastName, score };\n}\nexport default {\n  create({ firstName, lastName, score }) {\n    return new Promise(res => res(createData(firstName, lastName, score)));\n  },\n  async fetchAll() {\n    return await (await fetch(\"players.json\")).json();\n  },\n  delete(id) {\n    return new Promise(res => res(id));\n  },\n  edit(player) {\n    return new Promise(res => res(player));\n  }\n};\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport PlayerService from \"../modules/players/PlayerService\";\n\nfunction* fetchPlayers(action) {\n  try {\n    const data = yield call(PlayerService.fetchAll);\n    yield put({ type: \"FETCH_PLAYERS_SUCCESS\", data });\n  } catch (e) {\n    yield put({ type: \"FETCH_PLAYERS_FAIL\", message: e.message });\n  }\n}\n\nfunction* createPlayer(action) {\n  try {\n    const player = yield call(PlayerService.create, action.player);\n    yield put({ type: \"CREATE_PLAYER_SUCCESS\", player });\n  } catch (e) {\n    console.log(e);\n    yield put({ type: \"CREATE_PLAYER_FAIL\", message: e.message });\n  }\n}\n\nfunction* deletePlayer(action) {\n  try {\n    const id = yield call(PlayerService.delete, action.id);\n    yield put({ type: \"DELETE_PLAYER_SUCCESS\", id });\n  } catch (e) {\n    yield put({ type: \"DELETE_PLAYER_FAIL\", message: e.message });\n  }\n}\n\nfunction* editPlayer(action) {\n  try {\n    const player = yield call(PlayerService.edit, action.player);\n    yield put({ type: \"EDIT_PLAYER_SUCCESS\", player });\n  } catch (e) {\n    yield put({ type: \"EDIT_PLAYER_FAIL\", message: e.message });\n  }\n}\n\nfunction* rootSaga() {\n  yield takeLatest(\"FETCH_PLAYERS_REQUEST\", fetchPlayers);\n  yield takeLatest(\"CREATE_PLAYER_REQUEST\", createPlayer);\n  yield takeLatest(\"DELETE_PLAYER_REQUEST\", deletePlayer);\n  yield takeLatest(\"EDIT_PLAYER_REQUEST\", editPlayer);\n}\n\nexport default rootSaga;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport rootSaga from \"./sagas\";\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}